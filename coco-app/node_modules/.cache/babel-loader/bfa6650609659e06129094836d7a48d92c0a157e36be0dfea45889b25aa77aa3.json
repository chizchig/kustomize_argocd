{"ast":null,"code":"var _jsxFileName = \"/Users/tehila/Documents/Kubernetes_Proj/lemonade/coco-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const path = window.location.pathname;\n\n  // Determine which HTML file to render based on the current path\n  let page;\n  if (path === '/about') {\n    page = 'About.html';\n  } else if (path === '/services') {\n    page = 'Services.html';\n  } else if (path === '/contact') {\n    page = 'Contact.html';\n  } else {\n    page = 'Home.html';\n  }\n\n  // Load and render the HTML file dynamically\n  fetch(page).then(response => response.text()).then(html => {\n    document.getElementById('root').innerHTML = html;\n  }).catch(error => {\n    console.error('Error loading page:', error);\n  });\n  return null; // We don't need to render anything with React\n}\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDOM","reportWebVitals","jsxDEV","_jsxDEV","App","path","window","location","pathname","page","fetch","then","response","text","html","document","getElementById","innerHTML","catch","error","console","_c","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","$RefreshReg$"],"sources":["/Users/tehila/Documents/Kubernetes_Proj/lemonade/coco-app/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nfunction App() {\n  const path = window.location.pathname;\n\n  // Determine which HTML file to render based on the current path\n  let page;\n  if (path === '/about') {\n    page = 'About.html';\n  } else if (path === '/services') {\n    page = 'Services.html';\n  } else if (path === '/contact') {\n    page = 'Contact.html';\n  } else {\n    page = 'Home.html';\n  }\n\n  // Load and render the HTML file dynamically\n  fetch(page)\n    .then(response => response.text())\n    .then(html => {\n      document.getElementById('root').innerHTML = html;\n    })\n    .catch(error => {\n      console.error('Error loading page:', error);\n    });\n\n  return null; // We don't need to render anything with React\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AACpB,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ;;EAErC;EACA,IAAIC,IAAI;EACR,IAAIJ,IAAI,KAAK,QAAQ,EAAE;IACrBI,IAAI,GAAG,YAAY;EACrB,CAAC,MAAM,IAAIJ,IAAI,KAAK,WAAW,EAAE;IAC/BI,IAAI,GAAG,eAAe;EACxB,CAAC,MAAM,IAAIJ,IAAI,KAAK,UAAU,EAAE;IAC9BI,IAAI,GAAG,cAAc;EACvB,CAAC,MAAM;IACLA,IAAI,GAAG,WAAW;EACpB;;EAEA;EACAC,KAAK,CAACD,IAAI,CAAC,CACRE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;IACZC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACC,SAAS,GAAGH,IAAI;EAClD,CAAC,CAAC,CACDI,KAAK,CAACC,KAAK,IAAI;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;EAC7C,CAAC,CAAC;EAEJ,OAAO,IAAI,CAAC,CAAC;AACf;AAACE,EAAA,GA1BQjB,GAAG;AA4BZJ,QAAQ,CAACsB,MAAM,eACbnB,OAAA,CAACJ,KAAK,CAACwB,UAAU;EAAAC,QAAA,eACfrB,OAAA,CAACC,GAAG;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CAAC,EACnBb,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;AAEDf,eAAe,CAAC,CAAC;AAAC,IAAAoB,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}